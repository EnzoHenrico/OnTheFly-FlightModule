// <auto-generated />
using System;
using FlightsApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FlightsApi.Migrations
{
    [DbContext(typeof(FlightsApiContext))]
    partial class FlightsApiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.29")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Models.Address", b =>
                {
                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnOrder(0);

                    b.Property<int>("Number")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Complement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ZipCode", "Number");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("Models.Aircraft", b =>
                {
                    b.Property<string>("Rab")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("CompanyCnpj")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("LastFlightDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RegistryDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Rab");

                    b.HasIndex("CompanyCnpj", "CompanyName");

                    b.ToTable("Aircraft");
                });

            modelBuilder.Entity("Models.Airport", b =>
                {
                    b.Property<string>("_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Iata")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("_id");

                    b.ToTable("Airport");
                });

            modelBuilder.Entity("Models.Company", b =>
                {
                    b.Property<string>("Cnpj")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnOrder(0);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnOrder(1);

                    b.Property<int>("AddressNumber")
                        .HasColumnType("int");

                    b.Property<string>("AddressZipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NameOpt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OpeningDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Cnpj", "Name");

                    b.HasIndex("AddressZipCode", "AddressNumber");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("Models.Flight", b =>
                {
                    b.Property<int>("FlightNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FlightNumber"), 1L, 1);

                    b.Property<string>("Arrival_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PlaneRab")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Sales")
                        .HasColumnType("int");

                    b.Property<DateTime>("Schedule")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("FlightNumber");

                    b.HasIndex("Arrival_id");

                    b.HasIndex("PlaneRab");

                    b.ToTable("Flight");
                });

            modelBuilder.Entity("Models.Aircraft", b =>
                {
                    b.HasOne("Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyCnpj", "CompanyName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Models.Company", b =>
                {
                    b.HasOne("Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressZipCode", "AddressNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("Models.Flight", b =>
                {
                    b.HasOne("Models.Airport", "Arrival")
                        .WithMany()
                        .HasForeignKey("Arrival_id");

                    b.HasOne("Models.Aircraft", "Plane")
                        .WithMany()
                        .HasForeignKey("PlaneRab");

                    b.Navigation("Arrival");

                    b.Navigation("Plane");
                });
#pragma warning restore 612, 618
        }
    }
}
